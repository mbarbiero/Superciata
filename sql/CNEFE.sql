SELECT * FROM smuu.CN_PONTOS LIMIT 100;
SELECT COUNT(*) FROM smuu.CN_PONTOS;

SELECT * FROM smuu.CN_PONTOS_UNICOS LIMIT 100;
SELECT COUNT(*) FROM smuu.CN_PONTOS_UNICOS;

SELECT * FROM smuu.CN_QUADRAS LIMIT 100;
SELECT COUNT(*) FROM smuu.CN_QUADRAS;

-- Tabela de Faces
CREATE TABLE IF NOT EXISTS CN_FACES (
    ID_FACE VARCHAR(20),
    COD_MUNICIPIO VARCHAR(7),
    ID_QUADRA VARCHAR(20),
    NOM_LOGRADOURO VARCHAR(255),
    QTD_PONTOS INT,
    CENTROIDE POINT
);

-- Faces
INSERT INTO CN_FACES (ID_FACE, COD_MUNICIPIO, ID_QUADRA, NOM_LOGRADOURO, QTD_PONTOS, CENTROIDE)
SELECT
    ID_FACE,
    COD_MUNICIPIO,
    ID_QUADRA,
    NOM_LOGRADOURO,
    COUNT(*) AS QTD_PONTOS,
    POINT(AVG(LONGITUDE), AVG(LATITUDE)) AS CENTROIDE
FROM CN_PONTOS_UNICOS
GROUP BY ID_FACE;


-- Tabela de Quadras
CREATE TABLE IF NOT EXISTS CN_QUADRAS (
    ID_QUADRA VARCHAR(20),
    COD_MUNICIPIO VARCHAR(7),
    QTD_PONTOS INT,
    CENTROIDE POINT
);

INSERT INTO CN_QUADRAS (ID_QUADRA, COD_MUNICIPIO, QTD_PONTOS, CENTROIDE)
SELECT
    ID_QUADRA,
    COD_MUNICIPIO,
    COUNT(*) AS QTD_PONTOS,
    POINT(AVG(LONGITUDE), AVG(LATITUDE)) AS CENTROIDE
FROM CN_PONTOS_UNICOS
GROUP BY ID_QUADRA;


-- Tabela de Logradouros 
-- Cria a tabela com chave primária nomeada e campo identificador
CREATE TABLE IF NOT EXISTS CN_LOGRADOUROS (
    COD_MUNICIPIO VARCHAR(7) NOT NULL,
    NOM_LOGRADOURO VARCHAR(250) NOT NULL,
    ID_LOGRADOURO VARCHAR(260) AS (CONCAT(COD_MUNICIPIO, '-', NOM_LOGRADOURO)) STORED,
    CONSTRAINT PK_CN_LOGRADOUROS PRIMARY KEY (COD_MUNICIPIO, NOM_LOGRADOURO)
);

-- Preenche com registros únicos a partir de CN_PONTOS_UNICOS
INSERT IGNORE INTO CN_LOGRADOUROS (COD_MUNICIPIO, NOM_LOGRADOURO)
SELECT DISTINCT
    COD_MUNICIPIO,
    NOM_LOGRADOURO
FROM CN_PONTOS_UNICOS
ORDER BY NOM_LOGRADOURO;


SELECT * FROM smuu.CN_LOGRADOUROS ORDER BY NOM_LOGRADOURO;
SELECT COUNT(*) FROM smuu.CN_LOGRADOUROS;



